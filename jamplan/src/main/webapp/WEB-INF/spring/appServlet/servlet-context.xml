<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd 
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/websocket
      	http://www.springframework.org/schema/websocket/spring-websocket.xsd">


	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->

<!-- 
		<annotation-driven />

	Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory
	<resources mapping="/resources/**"
		location="/resources/calendar/css/" />
	<resources mapping="/resources/**"
		location="/resources/calendar/js/" />

 -->

	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	<resources mapping="/resources/**" location="/resources/mainPage/img/" />
	<resources mapping="/resources/**" location="/resources/calendar/css/" />
	<resources mapping="/resources/**" location="/resources/calendar/js/" />
	<resources mapping="/resources/**" location="/resources/myRoom/css/" />
	<resources mapping="/resources/**" location="/resources/myRoom/js/" />
	<resources mapping="/image/**" location="file:///C:/BigDeep/upload/" />
	
	<!-- NaverLoginBO Class에 대한 Bean설정 추가 -->
	<beans:bean id="naverLoginBO" class="com.spring.jamplan.snslogin.NaverLoginBO" />
	
	<!-- <mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/jamplan/home.do"/>
			<bean class="com.spring.jamplan.interceptor.LoginCheckInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors> -->
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

    <beans:bean id="multipartResolver"
      class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
   </beans:bean>
	<!--  
	<beans:bean id="multipartResolver" 
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	</beans:bean>
	-->
	<context:component-scan base-package="com.spring.jamplan" />
	<!-- WebSocket에 사용할 핸들러 객체 생성  -->
   <beans:bean id="socketHandler" class="com.spring.jamplan.myroom.SocketHandler" />
   <websocket:handlers>
      <websocket:mapping handler="socketHandler" path="/jamplanWebSocket"/>
   </websocket:handlers>
  
   	<beans:bean id="planMainSocketHandler" class="com.spring.jamplan.manageplan.PlanMainSocketHandler"/>
	
	<websocket:handlers>
		<websocket:mapping path="/planMainChat" handler="planMainSocketHandler"/>
		<websocket:handshake-interceptors>
			<beans:bean class="com.spring.jamplan.manageplan.PlanMainHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
	</websocket:handlers>
</beans:beans>

